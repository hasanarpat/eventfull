generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String @unique
  password String
  avatar String?
  savedEvents SavedEvents[]
  events Event[]
  arenas Arena[]
  artists Artist[]
  comments Comment[]
  createdAt DateTime @default(now())
}

model Event{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  arena Arena @relation(fields: [arenaId],references: [id])
  arenaId String @db.ObjectId
  artist Artist @relation(fields: [artistId],references: [id])
  artistId String @db.ObjectId
  user User @relation(fields:[userId], references:[id])
  userId String @db.ObjectId
  arenaName String
  artistName String
  title String
  desc String
  images String[]
  date DateTime
  time String
  price Int
  category String[]
  address String
  city String
  latitude String
  longitude String
  couponCount Int
  savedEvents SavedEvents[]
  comments Comment[]
  createdAt DateTime @default(now())
}

model Arena{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  events Event[]
  address String
  city String
  latitude String
  longitude String
  eventsOnShow String[]
  title String
  desc String
  images String[]
  seatCount Int
  createdAt DateTime @default(now())
  user User @relation(fields:[userId], references:[id])
  userId String @db.ObjectId
}

model Artist{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  events Event[]
  title String
  desc String
  images String[]
  category String[]
  eventsOnShow String[]
  createdAt DateTime @default(now())
  user User @relation(fields:[userId], references:[id])
  userId String @db.ObjectId
}

model SavedEvents{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  event Event @relation(fields:[eventId],references: [id])
  user User @relation(fields:[userId], references:[id])
  eventId String @db.ObjectId @unique
  userId String @db.ObjectId @unique
  createdAt DateTime @default(now())

  @@unique([eventId,userId])
}

model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  event Event @relation(fields:[eventId],references: [id])
  user User @relation(fields:[userId], references:[id])
  eventId String @db.ObjectId @unique
  userId String @db.ObjectId @unique
  content String
  createdAt DateTime @default(now())
  likes Int

  @@unique([eventId,userId])
}